Listeners are a basic concept in Node.js.
Problem is, you usually end up with loooooong files attaching listeners on your client.
And plus, you can't reload them as easily! 

Custom Emitters

By default, the client emitter is the only one available.
Handlers in Akairo are also EventEmitters, so we can have our listener handler listen to our handlers.
Using setEmitters, we can set custom emitters:

```
this.listenerHandler.setEmitters({
    commandHandler: this.commandHandler,
    inhibitorHandler: this.inhibitorHandler,
    listenerHandler: this.listenerHandler
});
```

Note: You have to call setEmitters before loadAll or Akairo will not be able to resolve your emitters.
Blocked Commands

Remember the reason for inhibitors in previous tutorial?
They are emitted to the messageBlocked (anything with pre type or before) or commandBlocked (everything after) event by the command handler.
Since we set the command handler to the key commandHandler up above, we have to use that as the emitter option.

```
const { Listener } = require('discord-akairo');

class CommandBlockedListener extends Listener {
    constructor() {
        super('commandBlocked', {
            emitter: 'commandHandler',
            event: 'commandBlocked'
        });
    }

    exec(message, command, reason) {
        console.log(`${message.author.username} was blocked from using ${command.id} because of ${reason}!`);
    }
}

module.exports = CommandBlockedListener;
```

And if you want your listeners to run only once, you add the option type with the value of 'once'. 